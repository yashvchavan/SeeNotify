version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: seenotify-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: seenotify
    networks:
      - seenotify-network

  # Node.js Backend (Authentication & Core Services)
  node-backend:
    build: ./seenotify_backend
    container_name: seenotify-node-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/seenotify?authSource=admin
      - SESSION_SECRET=your-super-secure-session-secret-change-this
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - seenotify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend (ML & Analytics)
  django-backend:
    build: ./backend
    container_name: seenotify-django-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=your-super-secure-django-secret-key-change-this
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/?authSource=admin
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000
    depends_on:
      - mongodb
    networks:
      - seenotify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: seenotify-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - node-backend
      - django-backend
    networks:
      - seenotify-network

volumes:
  mongodb_data:
    driver: local

networks:
  seenotify-network:
    driver: bridge 